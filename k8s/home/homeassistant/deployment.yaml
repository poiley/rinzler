apiVersion: apps/v1
kind: Deployment
metadata:
  name: homeassistant
  namespace: home
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: homeassistant
  template:
    metadata:
      labels:
        app: homeassistant
    spec:
      initContainers:
      - name: setup-http-config
        image: busybox:1.35
        command: 
        - sh
        - -c
        - |
          echo "Checking for HTTP configuration..."
          if [ ! -f /config/configuration.yaml ]; then
            echo "configuration.yaml not found, creating basic config"
            cat > /config/configuration.yaml <<EOF
          # Home Assistant configuration
          default_config:
          
          # HTTP configuration for reverse proxy
          http:
            use_x_forwarded_for: true
            trusted_proxies:
              - 10.42.0.0/16
              - 127.0.0.1
              - ::1
          EOF
          else
            echo "configuration.yaml exists, checking for HTTP config"
            if ! grep -q "^http:" /config/configuration.yaml; then
              echo "Adding HTTP configuration to existing config"
              cat >> /config/configuration.yaml <<EOF
          
          # HTTP configuration for reverse proxy
          http:
            use_x_forwarded_for: true
            trusted_proxies:
              - 10.42.0.0/16
              - 127.0.0.1
              - ::1
          EOF
            else
              echo "HTTP configuration already exists"
            fi
          fi
        volumeMounts:
        - name: config
          mountPath: /config
      nodeSelector:
        kubernetes.io/hostname: rinzler
      hostNetwork: true  # Required for device discovery
      containers:
      - name: homeassistant
        image: ghcr.io/home-assistant/home-assistant:stable
        securityContext:
          privileged: true  # Required for hardware access
        env:
        - name: TZ
          value: "America/Los_Angeles"
        ports:
        - containerPort: 8123
          name: http
        volumeMounts:
        - name: config
          mountPath: /config
        - name: localtime
          mountPath: /etc/localtime
          readOnly: true
        - name: dbus
          mountPath: /run/dbus
          readOnly: true
        resources:
          limits:
            memory: 1Gi
          requests:
            cpu: 200m
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /
            port: 8123
          initialDelaySeconds: 60
          periodSeconds: 30
      volumes:
      - name: config
        hostPath:
          path: /storage/docker_volumes/homeassistant/config
          type: Directory
      - name: localtime
        hostPath:
          path: /etc/localtime
          type: File
      - name: dbus
        hostPath:
          path: /run/dbus
          type: Directory