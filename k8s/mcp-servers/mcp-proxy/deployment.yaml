apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-proxy
  namespace: mcp-servers
  labels:
    app: mcp-proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-proxy
  template:
    metadata:
      labels:
        app: mcp-proxy
    spec:
      serviceAccountName: k8s-mcp-server
      containers:
      - name: mcp-proxy
        image: node:20-alpine
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - |
          cd /home/node
          # Install dependencies
          apk add --no-cache git python3 py3-pip
          
          # Clone and install mcp-proxy
          git clone https://github.com/sparfenyuk/mcp-proxy.git
          cd mcp-proxy
          npm install
          
          # Build mcp-proxy
          npm run build
          
          # Install k8s-mcp-server in virtual environment
          python3 -m venv /opt/venv
          source /opt/venv/bin/activate
          pip install mcp-server-k8s
          
          # Configure servers
          cat > servers.json << 'EOF'
          {
            "mcpServers": {
              "k8s": {
                "enabled": true,
                "command": "/opt/venv/bin/mcp-server-k8s",
                "args": [],
                "env": {
                  "ALLOWED_COMMANDS": "kubectl,helm,argocd",
                  "LOG_LEVEL": "info"
                }
              }
            }
          }
          EOF
          
          # Start the proxy
          node dist/index.js --port 8080 --transport sse --named-server-config servers.json
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"