apiVersion: v1
kind: Secret
metadata:
  name: pihole-config
  namespace: networking
type: Opaque
stringData:
  WEBPASSWORD: "REPLACE_WITH_YOUR_PIHOLE_PASSWORD"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-etc-pvc
  namespace: networking
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole-dnsmasq-pvc
  namespace: networking
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: local-storage
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  namespace: networking
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      containers:
        - name: pihole
          image: pihole/pihole:latest
          env:
            - name: TZ
              value: "America/Los_Angeles"
            - name: WEBPASSWORD
              valueFrom:
                secretKeyRef:
                  name: pihole-config
                  key: WEBPASSWORD
            - name: RATE_LIMIT
              value: "0/0"
          ports:
            - containerPort: 80
              name: pihole-web
            - containerPort: 53
              name: dns-tcp
              protocol: TCP
            - containerPort: 53
              name: dns-udp
              protocol: UDP
          volumeMounts:
            - name: etc-pihole
              mountPath: /etc/pihole
            - name: etc-dnsmasq
              mountPath: /etc/dnsmasq.d
          livenessProbe:
            httpGet:
              path: /admin/
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 30
          readinessProbe:
            httpGet:
              path: /admin/
              port: 80
            initialDelaySeconds: 10
            periodSeconds: 10
      volumes:
        - name: etc-pihole
          persistentVolumeClaim:
            claimName: pihole-etc-pvc
        - name: etc-dnsmasq
          persistentVolumeClaim:
            claimName: pihole-dnsmasq-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-web
  namespace: networking
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      name: pihole-web
  selector:
    app: pihole
---
apiVersion: v1
kind: Service
metadata:
  name: pihole-dns
  namespace: networking
spec:
  type: LoadBalancer
  ports:
    - port: 53
      targetPort: 53
      name: dns-tcp
      protocol: TCP
    - port: 53
      targetPort: 53
      name: dns-udp
      protocol: UDP
  selector:
    app: pihole
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: pihole-ingress
  namespace: networking
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.rule: "PathPrefix(`/pihole`)"
spec:
  rules:
    - http:
        paths:
          - path: /pihole
            pathType: Prefix
            backend:
              service:
                name: pihole-web
                port:
                  number: 80 